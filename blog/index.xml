<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<link>https://just.billywhizz.io/blog</link>
<atom:link href="https://just.billywhizz.io/blog/index.xml" rel="self" type="application/rss+xml" />
<title>
just javascript
</title>
<description>
official blog of just-js project
</description>
<item>
<guid>http://just.billywhizz.io/blog/on-javascript-performance-01/</guid>
<title>On Javascript Performance: Part 1 - Techempower Rankings</title>
<description>
This was a question that was recently asked on github, prompted by the arrival of a new javascript platform near the summit of the intermediate techempower rankings. This platform, Just(js), is something I have been hacking on as a side-project for quite some time. Here I will attempt to give a brief answer to the question and will be following up with some further detail on this and the platform itself over the coming weeks...
</description>
<link>http://just.billywhizz.io/blog/on-javascript-performance-01/</link>
<pubDate>Sun, 25 Oct 2020 15:00:00 +0100</pubDate>
</item>

<item>
<guid>http://just.billywhizz.io/blog/on-javascript-performance-02/</guid>
<title>On Javascript Performance: Part 2 - Syscall Overhead in Javascript</title>
<description>
The goal of this demo is to establish the overhead of making syscalls in the just(js) runtime for Javascript. We will write a simple console application which counts the number of bytes piped to it over stdin. The application will call the read syscall repeatedly in various chunk sizes.
</description>
<link>http://just.billywhizz.io/blog/on-javascript-performance-02/</link>
<pubDate>Fri, 19 Feb 2021 23:45:00 +0100</pubDate>
</item>
</channel>
</rss>